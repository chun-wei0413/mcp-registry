version: '3.8'

# PostgreSQL & MySQL MCP Servers 統一部署配置
# 使用統一的 src 目錄架構

services:
  # 注意：PostgreSQL 資料庫已存在於 localhost:5432，不需要重新部署

  # MySQL 資料庫 (舊系統 old_kanban_data)
  mysql:
    image: mysql:8.0
    container_name: mysql-source-db
    environment:
      MYSQL_ROOT_PASSWORD: mysql_root_pass
      MYSQL_DATABASE: old_kanban_data
      MYSQL_USER: migration_user
      MYSQL_PASSWORD: migration_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./deployment/docker/mysql/init:/docker-entrypoint-initdb.d
      - ./deployment/docker/mysql/backup_data:/backup_data:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=512M
      --max-connections=200
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "migration_user", "-pmigration_pass"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - mcp_network

  # PostgreSQL MCP Server
  postgresql-mcp-server:
    build:
      context: .
      dockerfile: deployment/docker/postgres/Dockerfile
    container_name: postgresql-mcp-server
    environment:
      - MCP_SERVER_PORT=3000
      - MCP_LOG_LEVEL=INFO
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
      - POSTGRES_DB=target_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_pass
      - PYTHONPATH=/app
    ports:
      - "3002:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mcp_network
    volumes:
      - ./logs/postgresql-mcp:/app/logs
    restart: unless-stopped

  # MySQL MCP Server
  mysql-mcp-server:
    build:
      context: .
      dockerfile: deployment/docker/mysql/Dockerfile
    container_name: mysql-mcp-server
    environment:
      - MCP_SERVER_PORT=3001
      - MCP_LOG_LEVEL=INFO
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=old_kanban_data
      - MYSQL_USER=migration_user
      - MYSQL_PASSWORD=migration_pass
      - PYTHONPATH=/app
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mcp_network
    volumes:
      - ./logs/mysql-mcp:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mysql_data:
    driver: local

networks:
  mcp_network:
    driver: bridge

# 使用指南:
#
# 1. 啟動所有服務:
#    docker-compose up -d
#
# 2. 檢查服務狀態:
#    docker-compose ps
#
# 3. 查看日誌:
#    docker-compose logs postgresql-mcp-server
#    docker-compose logs mysql-mcp-server
#
# 4. 停止服務:
#    docker-compose down
#
# 5. 重建服務:
#    docker-compose up --build -d
#
# 服務端點:
# - PostgreSQL MCP Server: http://localhost:3000
# - MySQL MCP Server: http://localhost:3001
# - PostgreSQL DB: localhost:5432
# - MySQL DB: localhost:3306