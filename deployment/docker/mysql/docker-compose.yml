version: '3.8'

services:
  mysql-migration:
    image: mysql:8.0
    container_name: mysql-kanban-migration
    environment:
      MYSQL_ROOT_PASSWORD: migration_root_pass
      MYSQL_DATABASE: old_kanban_data
      MYSQL_USER: migration_user
      MYSQL_PASSWORD: migration_pass
    ports:
      - "3306:3306"
    volumes:
      # Mount initialization scripts
      - ./init:/docker-entrypoint-initdb.d
      # Mount backup data directory (to be created)
      - ./backup_data:/backup_data:ro
      # Persistent data storage
      - mysql_migration_data:/var/lib/mysql
    networks:
      - migration_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=512M
      --max-connections=200
      --sql-mode="STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "migration_user", "-pmigration_pass"]
      timeout: 5s
      retries: 10
      interval: 10s
      start_period: 30s

  mysql-mcp-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: mysql-mcp-server
    environment:
      - MCP_SERVER_PORT=3001
      - MCP_LOG_LEVEL=INFO
      - MYSQL_HOST=mysql-migration
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=old_kanban_data
      - MYSQL_USER=migration_user
      - MYSQL_PASSWORD=migration_pass
    ports:
      - "3001:3001"
    depends_on:
      mysql-migration:
        condition: service_healthy
    networks:
      - migration_network
    volumes:
      - ./logs:/app/logs

volumes:
  mysql_migration_data:
    driver: local

networks:
  migration_network:
    driver: bridge